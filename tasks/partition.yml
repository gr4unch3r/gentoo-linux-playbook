---
- name: Detecting firmware type
  ansible.builtin.shell:
    cmd: ls /sys/firmware/efi/efivars
  register: efivars_contents

- name: Discarding device sectors
  ansible.builtin.shell:
    cmd: blkdiscard -f {{ sys_device }}

- name: Creating ESP if UEFI
  community.general.parted:
    device: "{{ sys_device }}"
    number: 1
    state: present
    align: optimal
    fs_type: fat32
    label: gpt
    name: boot
    flags: [boot]
    part_start: 1MiB
    part_end: 257MiB
  when: efivars_contents.stdout != ""

- name: Creating fat32 filesystem on ESP and checking disk blocks
  community.general.filesystem:
    fstype: vfat
    dev: "{{ sys_device }}1"
    opts: -F 32 -cc
  when: efivars_contents.stdout != ""

- name: Creating boot partition if BIOS
  community.general.parted:
    device: "{{ sys_device }}"
    number: 1
    state: present
    align: optimal
    fs_type: ext4
    label: msdos
    name: boot
    flags: [boot]
    part_start: 1MiB
    part_end: 257MiB
  when: efivars_contents.stdout == ""

- name: Creating ext4 filesystem on boot partition and checking disk blocks
  community.general.filesystem:
    fstype: ext4
    dev: "{{ sys_device }}1"
    opts: -cc
  when: efivars_contents.stdout == ""

- name: Creating swap partition if UEFI
  community.general.parted:
    device: "{{ sys_device }}"
    number: 2
    state: present
    align: optimal
    fs_type: linux-swap
    label: gpt
    name: swap
    flags: [swap]
    part_start: 258MiB
    part_end: 4355MiB
  when: efivars_contents.stdout != ""

- name: Creating swap partition if BIOS
  community.general.parted:
    device: "{{ sys_device }}"
    number: 2
    state: present
    align: optimal
    fs_type: linux-swap
    label: msdos
    name: swap
    flags: [swap]
    part_start: 258MiB
    part_end: 4355MiB
  when: efivars_contents.stdout == ""

- name: Making swap and checking disk blocks
  community.general.filesystem:
    fstype: swap
    dev: "{{ sys_device }}2"
    opts: -cc

- name: Activating swap
  ansible.builtin.shell:
    cmd: swapon "{{ sys_device }}2"

- name: Creating / partition if UEFI
  community.general.parted:
    device: "{{ sys_device }}"
    number: 3
    state: present
    align: optimal
    fs_type: ext4
    label: gpt
    name: rootfs
    part_start: 4356MiB
    part_end: -1MiB
  when: efivars_contents.stdout != ""

- name: Creating / partition if BIOS
  community.general.parted:
    device: "{{ sys_device }}"
    number: 3
    state: present
    align: optimal
    fs_type: ext4
    label: msdos
    name: rootfs
    part_start: 4356MiB
    part_end: -1MiB
  when: efivars_contents.stdout == ""

- name: Creating ext4 filesystem on / partition and checking disk blocks
  community.general.filesystem:
    fstype: ext4
    dev: "{{ sys_device }}3"
    opts: -cc

- name: Creating / mountpoint
  ansible.builtin.file:
    path: "{{ chroot_mnt }}"
    state: directory

- name: Mounting / partition
  ansible.posix.mount:
    path: "{{ chroot_mnt }}"
    src: "{{ sys_device }}3"
    fstype: ext4
    opts: noatime
    state: mounted
    dump: 0
    passno: 1
